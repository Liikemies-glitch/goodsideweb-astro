---
import BaseLayout from '../../layouts/BaseLayout.astro';
import CalendlyEmbed from '../../components/CalendlyEmbed.astro';
import HeroSection from '../../components/HeroSection.astro';

const pageTitle = "Contact Us | The Good Side";
const pageDescription = "Book a time from the calendar or leave a contact request, and we'll see how we can help.";
---

<BaseLayout title={pageTitle} description={pageDescription}>
  <HeroSection
    title="Let's Talk About Your Product's Future"
    paddingTop="4rem"
    paddingBottom="1rem" 
    class="contact-hero-bg" 
    textOnly={true}
  >
    <span slot="paragraph">
      {pageDescription}
      <br/>
      You can also <a href="tel:0408698887">call directly</a> or send an email to <a href="mailto:mikki@goodside.fi">mikki@goodside.fi</a>.
    </span>
  </HeroSection>

  <section class="schedule-section">
    <div class="container">
        <CalendlyEmbed elementId="my-cal-inline" calLink="aaltoyleva/kartoitustapaaminen" />
    </div>
  </section>

  <section class="contact-form-section">
    <div class="container">
      <div class="form-content" id="hubspot-form-container">
        <h2>Or Leave a Contact Request</h2>
        <p>If you can't find a suitable time or would prefer that I contact you, fill out the form and I'll get back to you as soon as possible.</p>
        <template id="hubspot-template">
            <script src="https://js-eu1.hsforms.net/forms/embed/145360432.js" defer></script>
            <div class="hs-form-frame" data-region="eu1" data-form-id="8bc5845c-348d-4ba7-baea-ebd46b11b0a0" data-portal-id="145360432"></div>
        </template>
      </div>
    </div>
  </section>

  <script type="text/javascript" is:inline>
    document.addEventListener('DOMContentLoaded', () => {
        const formContainer = document.getElementById('hubspot-form-container');
        const template = document.getElementById('hubspot-template');

        if (!formContainer || !template) {
            console.error("HubSpot lazy load elements not found.");
            return;
        }

        const observer = new IntersectionObserver((entries, obs) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    const content = template.content.cloneNode(true);
                    const scriptTag = content.querySelector('script');
                    const formDiv = content.querySelector('.hs-form-frame');

                    if (scriptTag && formDiv) {
                        formContainer.appendChild(formDiv);
                        const newScript = document.createElement('script');
                        newScript.src = scriptTag.src;
                        newScript.defer = scriptTag.defer;
                        formContainer.appendChild(newScript); 
                    } else {
                         console.error("HubSpot script or form div not found in template.");
                    }
                    obs.unobserve(formContainer);
                }
            });
        }, { threshold: 0.1 });

        observer.observe(formContainer);
    });
  </script>
</BaseLayout>

<style>
    .schedule-section {
        padding: var(--spacing-xl) 0;
    }

  .contact-hero-bg {
    background-image: url('/images/mesh-gradient-green.webp');
    background-size: cover;
    background-position: center;
  }
</style> 