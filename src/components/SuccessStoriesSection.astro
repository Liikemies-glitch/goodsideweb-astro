---
// Define the structure for a story
export interface Story {
    href: string;
    imageSrc: string;
    imageAlt: string;
    title: string;
    subtitle: string;
    isComingSoon?: boolean;
    comingSoonText?: string;
    displayNone?: boolean; // To control initial visibility
}

export interface Props {
    sectionId?: string;
    sectionTitle: string;
    sectionParagraph: string;
    stories: Story[];
    style?: string; // Allow passing custom styles for the section
}

const {
    sectionId = "case-studies",
    sectionTitle,
    sectionParagraph,
    stories,
    style = "padding: 4rem 0;" // Default style
} = Astro.props;
---

<section id={sectionId} class="success-stories" style={style}>
    <div class="container">
        <div style="text-align: center; margin-bottom: 3rem;">
            <h2 class="gradient-heading-lg">{sectionTitle}</h2>
            <p class="large-paragraph" style="max-width: 700px; margin: 1rem auto 0 auto;">
                {sectionParagraph}
            </p>
        </div>

        <div class="success-stories-grid">
            {stories.map(story => (
                <a 
                    href={story.href} 
                    class:list={["story-card-wrapper", { "is-coming-soon": story.isComingSoon }]}
                    style={story.displayNone ? "display: none;" : ""}
                >
                    <div class="story-card">
                        <div class="story-card-image">
                            <img 
                                src={story.imageSrc} 
                                alt={story.imageAlt} 
                                style={`width: 100%; height: 100%; object-fit: cover; ${story.isComingSoon ? 'filter: blur(8px);' : ''}`}
                            />
                        </div>
                        <div class="story-card-content">
                            {story.isComingSoon && story.comingSoonText && (
                                <div class="coming-soon-overlay">{story.comingSoonText}</div>
                            )}
                            <h4>{story.title}</h4>
                            <p class="story-card-subtitle">{story.subtitle}</p>
                        </div>
                    </div>
                </a>
            ))}
        </div>
    </div>
</section>

<style>
    /* New Success Stories Styles */
    .success-stories-grid {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        gap: 2rem; /* Adjust gap as needed */
    }
    .story-card {
        background-color: var(--card-background, #fff); /* Use a variable or default */
        border: 1px solid var(--border-color, #e2e8f0);
        border-radius: 1rem;
        overflow: hidden;
        transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
        height: 100%; /* Ensure card fills the wrapper */
    }
    .story-card-image {
        background-color: #f8f8f8; /* Light grey placeholder */
        height: 200px; /* Adjust height as needed */
        display: flex;
        align-items: center;
        justify-content: center;
        border-bottom: 1px solid var(--border-color, #e2e8f0);
        position: relative; /* Needed for potential image overlay if desired later */
    }
    .story-card-content {
        padding: 1.5rem;
        position: relative; /* Needed for the coming soon overlay */
    }
    .story-card-content h4 {
        margin-bottom: 0.5rem;
        font-size: 1.25rem; /* Adjust font size */
        font-weight: 600; /* Semi-bold */
        color: var(--text-color);
    }
    .story-card-subtitle {
        font-size: 0.9rem;
        color: var(--light-text);
        margin-bottom: 1rem;
    }

    /* New styles for the anchor wrapper */
    .story-card-wrapper {
        display: block; /* Make the anchor fill its grid area */
        text-decoration: none; /* Remove default underline */
        color: inherit; /* Inherit text color */
        border-radius: 1rem; /* Match card border radius */
        transition: box-shadow 0.2s ease-in-out;
        /* Ensure the wrapper takes the display:none style if applied */
        &[style*="display: none"] {
             display: none !important;
        }
    }

    .story-card-wrapper:hover {
        /* Add shadow to the wrapper on hover */
        box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
    }

    .story-card-wrapper:hover .story-card {
         /* Change border color of the card inside the hovered wrapper */
        border-color: var(--primary-color);
    }

    /* Styles for coming soon cards */
    .story-card-wrapper.is-coming-soon {
        pointer-events: none; /* Disable click */
        cursor: default; /* Change cursor */
    }

    .story-card-wrapper.is-coming-soon .story-card {
        opacity: 0.6; /* Dim the card slightly */
         border-color: var(--border-color, #e2e8f0) !important; /* Override hover border color */
    }
     .story-card-wrapper.is-coming-soon:hover {
         box-shadow: none; /* Remove shadow on hover for coming soon cards */
     }

    .coming-soon-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(255, 255, 255, 0.7); /* Semi-transparent white overlay */
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 600; /* Semi-bold */
        color: var(--dark-text, #333); /* Use a dark text color */
        text-align: center;
        padding: 1rem;
        z-index: 1; /* Ensure it's above the normal content */
        /* Apply border-radius only to the bottom corners if image is not blurred, otherwise full */
        border-radius: 0 0 1rem 1rem; 
        backdrop-filter: blur(1px); /* Optional: add a slight blur to the background - Reduced from 2px */
        -webkit-backdrop-filter: blur(1px); /* Safari support - Reduced from 2px */
    }

    @media (max-width: 992px) {
         .success-stories-grid {
            grid-template-columns: repeat(2, 1fr);
        }
    }

    @media (max-width: 768px) {
        .success-stories-grid {
            grid-template-columns: 1fr;
        }
    }
</style> 