---
// Component props (if any in the future)
interface Props {
  title?: string;
  subtitle?: string;
  titleClass?: string;
}

const { title, subtitle, titleClass } = Astro.props;
---

{/* Add the section header only if title or subtitle is provided */}
{(title || subtitle) && (
  <div class="section__header" style="text-align: center; margin-bottom: var(--spacing-lg);">
    {title && <h2 class={`section__title ${titleClass || ''}`.trim()}>{title}</h2>}
    {subtitle && <p class="section__subtitle">{subtitle}</p>}
  </div>
)}

<!-- Placeholder div that will be replaced with the actual script when visible -->
<div id="trustmary-placeholder" style="min-height: 200px;"></div>

<script is:inline>
  document.addEventListener('DOMContentLoaded', function() {
    const placeholder = document.getElementById('trustmary-placeholder');
    if (!placeholder) return;
    
    const observer = new IntersectionObserver(function(entries) {
      entries.forEach(function(entry) {
        if (entry.isIntersecting) {
          // Replace the placeholder with the actual Trustmary script tag
          const scriptTag = document.createElement('script');
          scriptTag.src = "https://widget.trustmary.com/viOfoLSyY";
          
          // Replace the placeholder completely
          placeholder.parentNode.replaceChild(scriptTag, placeholder);
          
          // Disconnect the observer since we're done
          observer.disconnect();
        }
      });
    }, { rootMargin: '100px' });
    
    observer.observe(placeholder);
  });
</script> 