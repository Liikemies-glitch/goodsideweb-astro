---
import type { HTMLAttributes } from 'astro/types';

// Define the structure for stats if needed
interface StatItem {
    text: string;
    icon?: string; // Optional: Path or SVG string for an icon
}

interface Props extends HTMLAttributes<'section'> {
    title: string;
    paragraph: string;
    primaryButtonText?: string;
    primaryButtonHref?: string;
    secondaryButtonText?: string;
    secondaryButtonHref?: string;
    imageUrl?: string; // Made optional for textOnly mode
    imageAlt?: string; // Made optional for textOnly mode
    stats?: StatItem[];
    paddingTop?: string;
    paddingBottom?: string;
    imageStyles?: string; // Allow passing custom styles for the image container
    imgStyles?: string; // Allow passing custom styles for the image itself
    linkToResults?: boolean; // New prop to automatically link primary button to #results-section
    textOnly?: boolean; // New prop for text-only layout
}

const {
    title,
    paragraph,
    primaryButtonText,
    primaryButtonHref: explicitPrimaryButtonHref, // Renamed to avoid conflict
    secondaryButtonText,
    secondaryButtonHref,
    imageUrl,
    imageAlt,
    stats,
    paddingTop = '4rem',
    paddingBottom = '6rem',
    imageStyles = 'border-radius: 1rem; overflow: hidden;', // Default from referenssit.astro
    imgStyles = 'width: 100%; height: auto; display: block; object-fit: cover;', // Default from referenssit.astro
    linkToResults = false, // Default the new prop to false
    textOnly = false, // Default textOnly to false
    ...rest // Collect any other attributes like class, id, etc.
} = Astro.props;

// Determine the actual href for the primary button
const primaryHref = linkToResults ? '#results-section' : explicitPrimaryButtonHref;

// Add textOnly class conditionally
const sectionClasses = ["hero-section", rest.class, textOnly ? "hero-section--text-only" : ""].filter(Boolean).join(" ");
---

<section class:list={sectionClasses} style={`padding-top: ${paddingTop}; padding-bottom: ${paddingBottom};`} {...rest}>
    <div class="container hero-grid">
        <div class="hero-content">
            <h1 class="hero__title">{title}</h1>
            <p class="large-paragraph" style="margin-bottom: 2rem;">
                {paragraph}
            </p>
            <div class="hero-buttons">
                {primaryButtonText && primaryHref && (
                    <a href={primaryHref} class="btn btn--primary">{primaryButtonText}</a>
                )}
                {secondaryButtonText && secondaryButtonHref && (
                    <a href={secondaryButtonHref} class="btn btn--secondary">{secondaryButtonText}&nbsp;&rarr;</a>
                )}
            </div>
            {stats && stats.length > 0 && (
                <div class="hero-stats">
                    {stats.map(stat => (
                        <div class="hero-stat-item">
                            {/* Basic icon handling - assumes inline SVG or similar */} 
                            {stat.icon && <Fragment set:html={stat.icon} />}
                            <span>{stat.text}</span>
                        </div>
                    ))}
                </div>
            )}
        </div>
        {/* Conditionally render image based on textOnly prop and imageUrl */}
        {!textOnly && imageUrl && imageAlt && (
            <div class="hero-image-placeholder" style={imageStyles}>
                <img src={imageUrl} alt={imageAlt} style={imgStyles}/>
            </div>
        )}
    </div>
</section>

<style>
  /* Styles copied & adapted from eemel.astro and referenssit.astro */
  .hero-grid {
    display: grid;
    grid-template-columns: 1fr 1fr; /* Two columns on large screens */
    gap: 3rem;
    align-items: center;
  }

  .hero-content {
      /* Default alignment */
      text-align: left;
  }

  .hero-content .hero__title {
      margin-bottom: 1rem;
      font-weight: 700;
      /* Inherit size from global or BaseLayout */
      /* text-align is inherited from hero-content or overridden below */
  }

  .hero-buttons {
      display: flex;
      flex-wrap: wrap;
      gap: 1rem;
      margin-bottom: 2rem;
      justify-content: flex-start; /* Default alignment */
  }

  /* Ensure btn styles work (assuming .btn is global) */
  .hero-buttons .btn {
      /* No extra margins needed, gap handles spacing */
  }

  /* Style for the secondary button */
  .btn--secondary {
      background-color: var(--secondary-color); /* Assuming this is the dark blue brand color */
      color: #ffffff; /* Use explicit white color */
      border: none; /* Remove default border if .btn has one */
  }

  .btn--secondary:hover {
       filter: brightness(1.1); /* Simple hover effect */
  }

  .hero-stats {
      margin-top: 2rem;
      display: flex;
      flex-wrap: wrap;
      gap: 1.5rem;
      align-items: center;
      justify-content: flex-start; /* Default alignment */
  }

  .hero-stat-item {
      display: flex;
      align-items: center;
      gap: 0.5rem;
      font-size: var(--font-size-sm);
      color: var(--neutral-dark);
      font-weight: 500;
  }

  .hero-stat-item svg {
      /* Basic styling for potential icons */
      width: 18px;
      height: 18px;
      stroke-width: 2;
      stroke: var(--success-color, #10b981); /* Use success color or default */
  }

  /* Styles for text-only mode */
  .hero-section--text-only .hero-grid {
      grid-template-columns: 1fr; /* Single column layout */
      /* text-align: center;  Let children handle text alignment */
  }

  .hero-section--text-only .hero-content {
      text-align: center; /* Ensure content block itself is centered */
      max-width: 800px; /* Optional: Constrain width for readability */
      margin-left: auto; /* Center the block */
      margin-right: auto; /* Center the block */
  }
  
  .hero-section--text-only .hero-content .hero__title {
       text-align: center; /* Explicitly center title */
  }


  .hero-section--text-only .hero-buttons {
      justify-content: center; /* Center buttons */
  }

  .hero-section--text-only .hero-stats {
      justify-content: center; /* Center stats */
  }


  /* Responsiveness for hero */
  @media (max-width: 992px) {
      .hero-grid { /* Applies to both modes unless overridden by text-only */
          grid-template-columns: 1fr; /* Single column */
          text-align: left; /* Changed from center to left */
          width: 100%;
          padding-left: 0; /* Ensure no extra padding on left */
          padding-right: 0; /* Ensure no extra padding on right */
          margin-left: auto; /* Center the grid */
          margin-right: auto; /* Center the grid */
      }
      .hero-content {
          /* Default order */
          order: 1; /* Text first in mobile */
          padding-left: var(--spacing-md); /* Add consistent padding */
          padding-right: var(--spacing-md); /* Add consistent padding */
          width: 100%; /* Ensure full width */
          box-sizing: border-box; /* Include padding in width calculation */
          margin-left: 0; /* Reset any potential margins */
          margin-right: 0; /* Reset any potential margins */
          text-align: left; /* Keep text left-aligned */
      }
      .hero-image-placeholder {
          order: 2; /* Image second in mobile */
          margin-top: 3rem; /* Add margin top instead of bottom when image is second */
          margin-bottom: 0; 
          min-height: 250px; /* Ensure space for image */
          width: 100%;
          max-width: 600px; /* Limit maximum width in mobile */
          margin-left: auto;
          margin-right: auto;
      }
      /* Ensure centering applies correctly on mobile for both modes */
      .hero-content .hero__title {
          text-align: left; /* Keep left-aligned on mobile */
          width: 100%; /* Ensure full width */
      }
      .hero-buttons {
          justify-content: center;
          width: 100%; /* Ensure full width */
      }
      .hero-stats {
          justify-content: flex-start; /* Changed from center to left-aligned */
          width: 100%; /* Ensure full width */
      }
      /* If image exists, text comes first on mobile */
      /* If textOnly, the order doesn't matter as there's only one column */
      .hero-section:not(.hero-section--text-only) .hero-content {
          order: 1; 
      }
      .hero-section:not(.hero-section--text-only) .hero-image-placeholder {
          order: 2; 
      }

      /* Fix for container in mobile */
      .hero-section .container {
          width: 100%;
          box-sizing: border-box;
          padding-left: var(--spacing-md);
          padding-right: var(--spacing-md);
      }
  }

  /* Smaller mobile adjustments */
  @media (max-width: 768px) {
      .hero-content {
          padding-left: var(--spacing-sm);
          padding-right: var(--spacing-sm);
      }
      .hero-section .container {
          padding-left: var(--spacing-sm);
          padding-right: var(--spacing-sm);
      }
      /* Force no extra horizontal paddings or margins on mobile */
      .hero-buttons {
          width: 100%;
          margin-left: auto;
          margin-right: auto;
      }
      .hero-buttons .btn {
          text-align: center;
          justify-content: center;
      }
      /* Reduce gap between stats items on mobile */
      .hero-stats {
          gap: 0.75rem;
      }
      /* Hide hero image on mobile */
      .hero-image-placeholder {
          display: none;
      }
  }

  /* Specific fix for hero container alignment issues */
  .hero-section {
      width: 100%;
      box-sizing: border-box;
  }

  .hero-section .container {
      width: 100%; 
      box-sizing: border-box;
      padding-left: var(--spacing-xl);
      padding-right: var(--spacing-xl);
      margin-left: auto;
      margin-right: auto;
  }

  .hero-section .hero-grid {
      width: 100%;
      box-sizing: border-box;
      margin-left: auto;
      margin-right: auto;
  }

  @media (max-width: 992px) {
      .hero-section .container {
          padding-left: var(--spacing-md);
          padding-right: var(--spacing-md);
          max-width: 100%;
      }
      
      .hero-content {
          padding-left: 0 !important; /* Override any other padding */
          padding-right: 0 !important; /* Override any other padding */
          width: 100%;
          box-sizing: border-box;
          margin-left: auto;
          margin-right: auto;
      }
  }

  @media (max-width: 768px) {
      .hero-section .container {
          padding-left: var(--spacing-sm);
          padding-right: var(--spacing-sm);
      }
  }
</style> 