---
import { getCollection } from 'astro:content';
import { Image } from 'astro:assets';

interface Post {
    slug: string;
    data: {
        heroImage?: any; // Consider defining a more specific type if possible
        heroImageAlt?: string;
        title: string;
        tags?: string[];
        description?: string;
        pubDate: Date; // Added pubDate for sorting, though not directly used in template
    };
}

// Fetch latest 6 blog posts
const allPosts: Post[] = await getCollection('blog');
const latestPosts = allPosts
    .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
    .slice(0, 6);

// Helper function to format dates (jos tarvitaan tulevaisuudessa täällä)
/*
function formatDate(date: Date): string {
  return new Date(date).toLocaleDateString('fi-FI', {
    year: 'numeric',
    month: 'long',
    day: 'numeric',
  });
}
*/

interface Props {
    title?: string;
    showAllPostsButtonText?: string;
    allPostsLink?: string;
    posts?: Post[]; // Allow passing posts as a prop
    readMoreText?: string; // Add prop for "Read more" text
    defaultArticleText?: string; // Add prop for default article text
    language?: string; // Add prop for language
}

const {
    title = "Tuoreimmat ajatuksemme",
    showAllPostsButtonText = "Lue kaikki kirjoitukset →",
    allPostsLink = "/fi/blog", // Updated default to include /fi/
    posts = latestPosts, // Default to fetched latest posts if not provided
    readMoreText = "Lue lisää →", // Default to Finnish
    defaultArticleText = 'Lue artikkeli...', // Default to Finnish
    language // Will be undefined by default
} = Astro.props;

// Determine language from the allPostsLink if not explicitly provided
const lang = language || (allPostsLink.includes('/en/') ? 'en' : 'fi');

// Set language specific defaults
const readMore = lang === 'en' ? "Read more →" : readMoreText;
const defaultArticle = lang === 'en' ? 'Read article...' : defaultArticleText;

// Update the link path based on language
const getBlogPath = (slug: string) => {
    return lang === 'en' ? `/en/blog/${slug}/` : `/fi/blog/${slug}/`;
};
---

<section class="blog-preview" id="latest-posts">
    <div class="container">
        <div class="section__header" style="text-align: center; margin-bottom: var(--spacing-lg);">
            <h2 class="section__title">{title}</h2>
        </div>
        <div class="blog-grid">
            {posts.map(post => (
                <article class="blog-card">
                    <a href={getBlogPath(post.slug)} class="blog-card__link">
                        {post.data.heroImage && (
                           <div class="blog-card__image-container">
                             <Image
                               src={post.data.heroImage}
                               alt={post.data.heroImageAlt || post.data.title}
                               width={800}
                               height={450}
                               format="webp"
                               quality={80}
                               loading="lazy"
                               decoding="async"
                               class="blog-card__image"
                             />
                           </div>
                        )}
                        <div class="blog-card__content">
                             {post.data.tags && post.data.tags.length > 0 && (
                                <div class="blog-card__tags">
                                    {post.data.tags.map((tag: string) => (
                                        <span class="tag">{tag}</span>
                                    ))}
                                </div>
                             )}
                            <h3 class="blog-card__title">{post.data.title}</h3>
                            <p class="blog-card__excerpt">{post.data.description || defaultArticle}</p>
                            <div class="blog-card__footer">
                                <span class="blog-card__readmore">{readMore}</span>
                            </div>
                        </div>
                    </a>
                </article>
            ))}
        </div>
        {allPostsLink && showAllPostsButtonText && (
            <div style="text-align: center; margin-top: var(--spacing-lg);">
                <a href={allPostsLink} class="btn btn--primary">{showAllPostsButtonText}</a>
            </div>
        )}
    </div>
</section>

<style>
/* Styles for BlogPreviewSection - copy from index.astro if specific styles were there, 
   or ensure global styles cover these elements. For now, using common class names. */

.blog-preview {
    padding-top: var(--spacing-xl);
    padding-bottom: var(--spacing-xl);
    /* background-color: var(--color-background-secondary); Consider making this a prop or removing if not always needed */
}

.section__header {
    margin-bottom: var(--spacing-lg); /* Varmistetaan, että on olemassa */
    text-align: center;
}

.section__title {
    /* Tyylit section__titlelle, jos tarvitaan erityisiä */
}

.blog-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: var(--spacing-md);
    max-width: 1200px;
    margin: 0 auto;
}

.blog-card {
    background-color: var(--color-background-card);
    border-radius: 12px; /* Increased corner radius */
    overflow: hidden;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05); /* Added subtle glow */
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    text-decoration: none;
    color: inherit;
    display: flex; /* Added for consistent card height if content varies */
    flex-direction: column; /* Added for consistent card height */
    border: 1px solid #E5E5E5; /* Explicit border color instead of CSS variable */
}

.blog-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1); /* Enhanced glow on hover */
}

.blog-card__link {
    text-decoration: none;
    color: inherit;
    display: flex; /* Changed to flex to manage layout */
    flex-direction: column; /* Align items vertically */
    height: 100%; /* Varmistaa, että koko kortti on linkki */
}

.blog-card__image-container {
    width: 100%;
    aspect-ratio: 16 / 9; /* Maintain aspect ratio */
    overflow: hidden;
    flex-shrink: 0; /* Prevent image from shrinking */
}

.blog-card__image {
    width: 100%;
    height: 100%;
    object-fit: cover; /* Ensure image covers the container */
    display: block;
}

.blog-card__content {
    padding: var(--spacing-md);
    display: flex; /* Added for flex layout */
    flex-direction: column; /* Stack content vertically */
    flex-grow: 1; /* Allow content to grow and push footer down */
}

.blog-card__tags {
    margin-bottom: var(--spacing-xs);
    display: flex;
    flex-wrap: wrap;
    gap: 8px; /* Increase spacing between tags */
}

.tag {
    background-color: rgba(255, 0, 55, 0.1); /* Light red background */
    color: var(--primary-color); /* Red text color */
    padding: 6px 12px; /* Slightly more padding */
    border-radius: 9999px; /* Pill shape */
    font-size: 0.75rem; /* Explicit small font size */
    font-weight: var(--font-weight-medium);
    display: inline-block; /* Ensure proper pill display */
}

.blog-card__title {
    font-size: var(--font-size-lg);
    margin-top: 0;
    margin-bottom: var(--spacing-sm);
    color: var(--color-text-headings);
    line-height: 1.3; /* Adjust for better readability */
}

.blog-card__excerpt {
    font-size: var(--font-size-base);
    color: var(--color-text-body);
    margin-bottom: var(--spacing-md);
    line-height: 1.6;
    flex-grow: 1; /* Allow excerpt to take available space */
    max-height: 4.8em; /* Approx 3 lines of text (1.6em × 3) */
    overflow: hidden;
    display: -webkit-box;
    -webkit-line-clamp: 3; /* Limit to 3 lines */
    -webkit-box-orient: vertical;
}

.blog-card__footer {
    margin-top: auto; /* Pushes footer to the bottom */
    padding-top: var(--spacing-sm); /* Add some space above read more */
}

.blog-card__readmore {
    font-weight: var(--font-weight-bold);
    color: var(--color-primary);
    text-decoration: none;
    display: inline-block;
}

.blog-card__readmore:hover {
    text-decoration: underline;
}

/* Button styles - varmista, että nämä ovat globaaleja tai määritelty täällä */
.btn {
  display: inline-block;
  padding: var(--spacing-sm) var(--spacing-md);
  background-color: var(--color-primary);
  color: var(--color-text-button);
  text-decoration: none;
  border-radius: 100px; /* Rounded button corners */
  font-weight: var(--font-weight-bold);
  transition: background-color 0.3s ease;
  border: 1px solid transparent;
}

.btn:hover {
  background-color: var(--color-primary-dark);
}

.btn--primary {
  background-color: var(--primary-color) !important; /* Use primary-color from global CSS */
  color: white !important; /* Ensure text is white */
}

.btn--primary:hover {
  background-color: #E6004C !important; /* Darker primary color from global CSS */
  transform: translateY(-2px);
}

.btn--secondary {
  background-color: transparent;
  color: var(--color-primary);
  border-color: var(--color-primary);
}

.btn--secondary:hover {
  background-color: var(--color-primary-muted);
  color: var(--color-primary-dark);
}

</style> 