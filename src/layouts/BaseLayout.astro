---
// src/layouts/BaseLayout.astro
import '../styles/styles.css'; // Import global styles
import { SEO } from 'astro-seo'; // Import SEO component
import type { TwitterCardType } from 'astro-seo'; // Import specific type for Twitter card
import Footer from '../components/Footer.astro'; // Import the new Footer component
import { getLangFromUrl } from '../i18n/utils'; // Import i18n utility
import { getRelativeLocaleUrl } from 'astro:i18n'; // Astro i18n utilities

// Define props for dynamic title and description
interface Props {
	title: string;
	description: string;
    ogImage?: string; // Add optional ogImage prop
    // Add other SEO-related props if needed (e.g., specific keywords, author)
}

const { 
    title, 
    description, 
    ogImage 
} = Astro.props;

const lang = getLangFromUrl(Astro.url); // Get current language from URL

// HUOM: Astro.config.i18n.locales ei ole suoraan saatavilla tässä Astro-komponentissa.
// Käytetään tiedossa olevia arvoja tai haetaan ne astro:i18n-moduulista, jos mahdollista.
// Tässä tapauksessa tiedämme ne:
const supportedLocales = ['fi', 'en']; // Manuaalisesti määritellyt tuetut kielet
const defaultLocale = 'fi'; // Manuaalisesti määritelty oletuskieli

const siteUrl = Astro.site?.toString() ?? 'https://www.goodside.fi'; // Ensure site URL is defined
const canonicalURL = new URL(Astro.url.pathname, siteUrl).toString();

// Determine the final Open Graph image URL
// Use the provided ogImage, fallback to a default, ensure it's absolute
const finalOgImage = ogImage 
    ? new URL(ogImage, siteUrl).toString() 
    : new URL('/og_image.png', siteUrl).toString(); // Default Open Graph image (separate from the logo)

// --- SEO Component Configuration ---

// Define base Open Graph properties
const baseOgProperties = {
    title: title, // Use page title
    type: 'website',
    image: finalOgImage, // Use determined image URL
    url: canonicalURL, // Use canonical URL
    siteName: 'The Good Side', // Site name
    description: description // Use page description
};

// Define base Twitter card properties
const baseTwitterProperties = {
    card: 'summary_large_image' as TwitterCardType, // Explicitly cast the card type
    site: '@aaltoyleva', // Twitter handle
    creator: '@aaltoyleva', // Twitter handle
    title: title, // Use page title
    description: description, // Use page description
    image: finalOgImage, // Use determined image URL
    // imageAlt: 'Descriptive alt text for the image on Twitter' // Add specific alt text if needed
};

// Define Organization Schema
const organizationSchema = {
    '@context': 'https://schema.org',
    '@type': 'Organization',
    'url': siteUrl,
    'logo': new URL('/images/brand/logo.webp', siteUrl).toString(), // Keep the logo for schema unchanged
    'name': 'The Good Side Oy', // Assuming 'Oy' part based on footer
    'contactPoint': {
        '@type': 'ContactPoint',
        'telephone': '+358-40-869-8887', // Use international format
        'contactType': 'Customer Service', // Or appropriate type
        'email': 'mikki@goodside.fi' // Added email from footer
    },
    'sameAs': [ // Added LinkedIn from footer
        'https://www.linkedin.com/company/the-good-side-oy/'
    ]
};

// Muodostetaan polku ilman kieliprefiksiä hreflang-linkkejä varten
// getLocaleAstroStaticPath-funktio palauttaa polun ilman kieliprefiksiä.
// Tai, jos Astro.params.slug tms. on saatavilla, sitä voi käyttää.
// Yksinkertaistetaan: Astro.url.pathname sisältää jo kieliprefiksin.
// Poistetaan se manuaalisesti, jos se on olemassa.

let pathWithoutLocale = Astro.url.pathname;
if (pathWithoutLocale.startsWith(`/${lang}`)) {
    pathWithoutLocale = pathWithoutLocale.substring(`/${lang}`.length);
}
// Varmistetaan, että polku alkaa '/' jos se ei ole tyhjä (etusivu)
if (pathWithoutLocale === '') {
    pathWithoutLocale = '/';
} else if (!pathWithoutLocale.startsWith('/')) {
    pathWithoutLocale = `/${pathWithoutLocale}`;
}

---
<!DOCTYPE html>
<html lang={lang}> {/* Käytetään tunnistettua kieltä */}
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    {/* <meta name="description" content={description}> Replaced by SEO component */}
    {/* <title>{title}</title> Replaced by SEO component */}

    <!-- Google tag (gtag.js) - Google Analytics 4 -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-RQ16VX54BC"></script>
    <script is:inline>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());

      gtag('config', 'G-RQ16VX54BC');
    </script>

    {/* Favicon Links - Assuming files are in /public/ */}
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png"/>
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png"/>
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png"/>
    <link rel="manifest" href="/site.webmanifest"/>
    <link rel="icon" type="image/x-icon" href="/favicon.ico"/> {/* Fallback for older browsers */}
    {/* Optional: Add SVG icon link if you have one */}
    <link rel="icon" type="image/svg+xml" href="/favicon.svg"/>

    {/* hreflang-linkit */}
    {supportedLocales.map(locale => (
        <link
            rel="alternate"
            hreflang={locale}
            href={new URL(getRelativeLocaleUrl(locale, pathWithoutLocale === '/' && locale === defaultLocale ? undefined : pathWithoutLocale), Astro.site).toString()}
        />
    ))}
    <link
        rel="alternate"
        hreflang="x-default"
        href={new URL(getRelativeLocaleUrl(defaultLocale, pathWithoutLocale === '/' && defaultLocale === defaultLocale ? undefined : pathWithoutLocale), Astro.site).toString()}
    />

    <!-- Preload fonts for better performance -->
    <link rel="preconnect" href="https://fonts.googleapis.com"/>
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin/>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap" rel="stylesheet"/>
    <!-- Astro will handle CSS bundling, this is imported above -->
    <!-- <link rel="stylesheet" href="/styles.css"> -->
    <script is:inline src="/scripts/main.js"></script> <!-- Link main JS -->

    {/* SEO Component Insertion with Organization JSON-LD schema */}
    <SEO
        title={title}
        description={description}
        canonical={canonicalURL}
        openGraph={{
            basic: baseOgProperties,
            // Add image properties if needed (width, height, etc.)
            // image: {
            //     alt: 'Alt text for Open Graph image'
            // }
        }}
        twitter={baseTwitterProperties}
        extend={{
             meta: [{ 
                 name: 'script:ld+json', 
                 content: JSON.stringify(organizationSchema)
             }]
        }}
    />

    {/* Remove Old Meta Tags - These are now handled by the SEO component */}
    {/* 
    <meta property="og:type" content="website">
    <meta property="og:url" content={canonicalURL}>
    <meta property="og:title" content={title}>
    <meta property="og:description" content={description}>
    <meta property="og:image" content={finalOgImage}>
    <meta property="twitter:card" content="summary_large_image">
    <meta property="twitter:url" content={canonicalURL}>
    <meta property="twitter:title" content={title}>
    <meta property="twitter:description" content={description}>
    <meta property="twitter:image" content={finalOgImage}>
    <link rel="canonical" href={canonicalURL} /> 
    */}

</head>
<body>
    <!-- Header/Navigation -->
    <header class="header">
        <nav class="nav container">
            {/* Ryhmä logolle ja kielivalitsimelle */}
            <div class="logo-lang-group" style="display: flex; align-items: center;">
                <a href={getRelativeLocaleUrl(lang, '/')} class="nav__logo"> 
                    <img src="/images/brand/logo.webp" alt="The Good Side" width="140" height="32"/>
                </a>
                {/* Kielenvaihtolinkit, joilla margin-left ja margin-right */}
                <div class="language-switcher" style="display: flex; align-items: center; gap: 0.5rem; margin-left: 1rem; margin-right: 1rem;">
                    {supportedLocales.map((locale, index) => (
                        <>
                            {index > 0 && <span style="color: #CCC;">/</span>}
                            {locale === lang ? (
                                <span style="font-weight: bold; text-decoration: underline; color: var(--primary-color);">{locale.toUpperCase()}</span>
                            ) : (
                                <a href={getRelativeLocaleUrl(locale, pathWithoutLocale === '/' && locale === defaultLocale ? undefined : pathWithoutLocale)} style="text-decoration: none; color: var(--text-color-light);">{locale.toUpperCase()}</a>
                            )}
                        </>
                    ))}
                </div>
            </div>

            {/* Ryhmä navigaation ohjaimille (toggle-nappi ja menu) */}
            <div class="nav-controls" style="display: flex; align-items: center; gap: 1rem;"> 
                <button class="nav__toggle" aria-label="Toggle menu">
                    <span></span>
                    <span></span>
                    <span></span>
                </button>
                <ul class="nav__menu">
                    <li><a href={getRelativeLocaleUrl(lang, '/palvelut')}>Palvelut</a></li> 
                    <li><a href={getRelativeLocaleUrl(lang, '/referenssit')}>Referenssit</a></li> 
                    <li><a href={getRelativeLocaleUrl(lang, '/blog')}>Blogi</a></li> 
                    <li><a href={getRelativeLocaleUrl(lang, '/#hinnat')}>Hinnat</a></li> 
                    <li><a href={getRelativeLocaleUrl(lang, '/contact')} class="btn btn--primary">Ota yhteyttä</a></li> 
                </ul>
            </div>
        </nav>
    </header>

    <main style="padding-top: 5rem;">
        <!-- Page-specific content will be injected here -->
        <slot />
    </main>

    <!-- Use the new Footer component -->
    <Footer />

    <!-- Start of HubSpot Embed Code -->
    <script type="text/javascript" id="hs-script-loader" async defer src="//js-eu1.hs-scripts.com/145360432.js"></script>
    <!-- End of HubSpot Embed Code -->

</body>
</html> 